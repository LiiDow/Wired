/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Boss;

import Wired.PlaySound;
import Login.login;
import Subordoante.Sub;
import Wired.*;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import static java.awt.SystemColor.desktop;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reda ben
 */

public class Boss extends javax.swing.JFrame {
Timer timer;
PlaySound p;
    public Boss() {
        initComponents();
        Border blackline = BorderFactory.createLineBorder(Color.black);
        jLabel1.setBorder(blackline);
        boss();
        p = new PlaySound(System.getProperty("user.dir")+"/src/Wired/sound.wav");
        timer = new Timer();
        timer.schedule(new RemindTask(), 0,
                1 * 1000);
    }
    class RemindTask extends TimerTask {
    int z = 0;
    public void run() {
        int i = Notification;
        loadNotification();
        if(Notification > i  && z > 0){
                p.play();
                i = Notification;
        }
        z =1;
      }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel47 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        requestP = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        addP = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel29 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jTextField4 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        list = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        mainP = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jLabel47.setBackground(new java.awt.Color(26, 188, 156));
        jLabel47.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("Oui");
        jLabel47.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel47.setOpaque(true);
        jLabel47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel47MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel47MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel47MouseExited(evt);
            }
        });

        jLabel46.setBackground(new java.awt.Color(26, 188, 156));
        jLabel46.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("Non");
        jLabel46.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel46.setOpaque(true);
        jLabel46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel46MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel46MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel46MouseExited(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/showB.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(376, 28, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/closeB.png"))); // NOI18N
        jLabel4.setText("jLabel3");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 16, 16));

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/logoutB.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
        });
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 50, 50));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/newB.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel6MouseExited(evt);
            }
        });
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 50, 50));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/listB.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel7MouseExited(evt);
            }
        });
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 0, 50, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 73, 800, 60));

        requestP.setBackground(new java.awt.Color(249, 249, 249));
        requestP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setMaximumSize(new java.awt.Dimension(800, 430));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(800, 430));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineB.png"))); // NOI18N
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel34MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel34MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel34MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel34MouseReleased(evt);
            }
        });
        jPanel4.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 350, 210, 70));

        jLabel27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 20, 30));

        jScrollPane6.setBorder(null);

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("Write your reasons to decline this requests");
        jTextArea2.setToolTipText("");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setBorder(null);
        jTextArea2.setSelectionColor(new java.awt.Color(231, 231, 231));
        jTextArea2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea2MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTextArea2);

        jPanel4.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 72, 470, 270));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/DeclineBg.png"))); // NOI18N
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 430));

        requestP.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 430));

        jScrollPane4.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane4.setBorder(null);

        jTable4.setBackground(new java.awt.Color(249, 249, 249));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Team"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setGridColor(new java.awt.Color(255, 255, 255));
        jTable4.setRequestFocusEnabled(false);
        jTable4.setRowHeight(30);
        jTable4.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable4.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable4.getTableHeader().setResizingAllowed(false);
        jTable4.getTableHeader().setReorderingAllowed(false);
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setResizable(false);
        }

        requestP.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 100, 70, 270));

        jTextArea1.setBackground(new java.awt.Color(252, 252, 252));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTextArea1.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        jTextArea1.setEnabled(false);
        jScrollPane5.setViewportView(jTextArea1);

        requestP.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 430, 270));

        jScrollPane3.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane3.setBorder(null);
        jScrollPane3.setToolTipText("");
        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane3.setName(""); // NOI18N

        jTable3.setBackground(new java.awt.Color(249, 249, 249));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Requests"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setGridColor(new java.awt.Color(255, 255, 255));
        jTable3.setRequestFocusEnabled(false);
        jTable3.setRowHeight(30);
        jTable3.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable3.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable3.getTableHeader().setResizingAllowed(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
        }

        requestP.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 190, 270));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/acceptB.png"))); // NOI18N
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel33MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel33MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel33MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel33MouseReleased(evt);
            }
        });
        requestP.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, -1, 70));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        requestP.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 750, 30));

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineB.png"))); // NOI18N
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel32MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel32MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel32MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel32MouseReleased(evt);
            }
        });
        requestP.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, -1, 70));

        getContentPane().add(requestP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 800, 480));

        addP.setBackground(new java.awt.Color(249, 249, 249));
        addP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton3.setText("Maintenance");
        jRadioButton3.setToolTipText("");
        jRadioButton3.setOpaque(false);
        jRadioButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseReleased(evt);
            }
        });
        addP.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, -1));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton2.setText("Transfer");
        jRadioButton2.setOpaque(false);
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseReleased(evt);
            }
        });
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        addP.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton1.setText("Installation");
        jRadioButton1.setToolTipText("");
        jRadioButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton1.setName(""); // NOI18N
        jRadioButton1.setOpaque(false);
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseReleased(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        addP.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        jLabel29.setBackground(new java.awt.Color(249, 249, 249));
        jLabel29.setOpaque(true);
        addP.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 310, 60));

        jTextField1.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jTextField1.setText("Client Name");
        jTextField1.setBorder(null);
        jTextField1.setOpaque(false);
        jTextField1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTextField1MouseDragged(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        addP.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 200, 50));

        jTextField2.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jTextField2.setText("Phone Number");
        jTextField2.setBorder(null);
        jTextField2.setOpaque(false);
        jTextField2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTextField2MouseDragged(evt);
            }
        });
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2FocusLost(evt);
            }
        });
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });
        addP.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 200, 50));

        jTextField3.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jTextField3.setText("Address");
        jTextField3.setBorder(null);
        jTextField3.setOpaque(false);
        jTextField3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTextField3MouseDragged(evt);
            }
        });
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });
        addP.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 200, 50));

        jCheckBox1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCheckBox1.setText("Phone");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });
        addP.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, -1, -1));

        jCheckBox2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCheckBox2.setText("Adsl");
        jCheckBox2.setOpaque(false);
        jCheckBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox2MouseClicked(evt);
            }
        });
        addP.add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));

        jCheckBox3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCheckBox3.setText("New Client");
        jCheckBox3.setOpaque(false);
        jCheckBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox3MouseClicked(evt);
            }
        });
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        addP.add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        jTextField4.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        jTextField4.setText("Password");
        jTextField4.setBorder(null);
        jTextField4.setOpaque(false);
        jTextField4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTextField4MouseDragged(evt);
            }
        });
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField4FocusLost(evt);
            }
        });
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });
        addP.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 200, 50));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/pass.png"))); // NOI18N
        addP.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 282, 64, 56));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/addP1.png"))); // NOI18N
        addP.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 300, 290));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/sendB.png"))); // NOI18N
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel13MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel13MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel13MouseReleased(evt);
            }
        });
        addP.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 340, 180, 60));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/updateB.png"))); // NOI18N
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel19MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel19MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel19MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel19MouseReleased(evt);
            }
        });
        addP.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, 180, 60));

        jScrollPane1.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane1.setBorder(null);

        jTable1.setBackground(new java.awt.Color(249, 249, 249));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Team"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setRequestFocusEnabled(false);
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        addP.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 190, 270));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addP.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 750, 30));

        jLabel26.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Select a team !");
        addP.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 440, 20));

        getContentPane().add(addP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 800, 430));

        list.setOpaque(false);
        list.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel48.setBackground(new java.awt.Color(26, 188, 156));
        jLabel48.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("Oui");
        jLabel48.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel48.setOpaque(true);
        jLabel48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel48MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel48MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel48MouseExited(evt);
            }
        });
        jPanel2.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 80, 30));

        jLabel49.setBackground(new java.awt.Color(26, 188, 156));
        jLabel49.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Non");
        jLabel49.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel49.setOpaque(true);
        jLabel49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel49MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel49MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel49MouseExited(evt);
            }
        });
        jPanel2.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 80, 30));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Are you sure ?");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 330));

        jLabel17.setBackground(new java.awt.Color(51, 51, 51));
        jLabel17.setOpaque(true);
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 330));

        list.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 780, 330));

        jScrollPane2.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane2.setBorder(null);

        jTable2.setBackground(new java.awt.Color(249, 249, 249));
        jTable2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTable2.setForeground(new java.awt.Color(51, 51, 51));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Team", "Date", "Seen", "Validated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable2.setFocusable(false);
        jTable2.setGridColor(new java.awt.Color(255, 255, 255));
        jTable2.setRowHeight(30);
        jTable2.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable2.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable2.getTableHeader().setResizingAllowed(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
        }

        list.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 780, 330));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/editB.png"))); // NOI18N
        jLabel15.setText("jLabel15");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel15MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel15MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel15MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel15MouseReleased(evt);
            }
        });
        list.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 180, 60));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/deleteB.png"))); // NOI18N
        jLabel16.setText("jLabel15");
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel16MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel16MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel16MouseReleased(evt);
            }
        });
        list.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 180, 60));

        jLabel23.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel23.setText("Select a request !");
        list.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 170, 30));

        getContentPane().add(list, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 430));

        jPanel3.setOpaque(false);
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel3MouseExited(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 51, 51));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("You have");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, -1));

        jLabel24.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 51, 51));
        jLabel24.setText("0 New report");
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 120, -1));

        jLabel25.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 51, 51));
        jLabel25.setText("0 New request");
        jLabel25.setToolTipText("");
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 120, -1));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/notificationP.png"))); // NOI18N
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 80));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 55, 140, 80));

        mainP.setOpaque(false);
        mainP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/FirstBG.png"))); // NOI18N
        mainP.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 402, 136));

        getContentPane().add(mainP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 780, 370));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 79, 77));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("55");
        jLabel8.setToolTipText("");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 13, 20, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/min.png"))); // NOI18N
        jLabel9.setText("jLabel3");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 16, 16));

        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 40, 40));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 15, 200, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/BgBoss.jpg"))); // NOI18N
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        if(new File("user.txt").delete() ) System.out.println("user.txt Deleted :D ");
        else System.out.println("user.txt Not deleted ");
        if(new File("login.conf").delete() ) System.out.println("login.conf Deleted :D ");
        else System.out.println("login.txt Not deleted ");
        if(new File("admin.conf").delete() ) System.out.println("admin.conf Deleted :D ");
        else System.out.println("admin.txt Not deleted ");
        if(new File("boss.conf").delete() ) System.out.println("boss.conf Deleted :D ");
        else System.out.println("boss.conf Not deleted ");
        if(new File("sub.conf").delete() ) System.out.println("sub.conf Deleted :D ");
        else System.out.println("sub.conf Not deleted ");
        if(new File("report.pdf").delete() ) System.out.println("report.pdf Deleted :D ");
        else System.out.println("report.pdf Not deleted ");
        if(new File("printreq.pdf").delete() ) System.out.println("printreq.pdf Deleted :D ");
        else System.out.println("printreq.pdf Not deleted ");
        System.exit(0);
    }//GEN-LAST:event_jLabel4MouseClicked
    boolean showPanel1 = false;
    public void showMenu(){
        if (!showPanel1) {
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/showBC.png")));
            jPanel1.setVisible(true);
            showPanel1 = true;
        } else {
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/showB.png")));
            showPanel1 = false;
            jPanel1.setVisible(false);
        }
    }

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        jPanel3.setVisible(false);
        notificationP = false;
        jPanel3.setVisible(false);
        notificationP = false;
        jLabel28.setVisible(false);
        showMenu();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        
    try {
        jLabel26.setVisible(false);
        jLabel23.setVisible(false);
        jPanel4.setVisible(false);
        BufferedReader reader = new BufferedReader(new FileReader("boss.conf"));
        String line;
        int l=0,w=Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 400,h=Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 300;
        while ((line = reader.readLine()) != null)
        {
          if(l == 0 ) {
              w = parseInt(line);
              l++;
          }
          else  h = parseInt(line);
        }
        reader.close();
        this.setLocation(w, h);
        jPanel1.setVisible(false);
        list.setVisible(false);
        addP.setVisible(false);
        jPanel3.setVisible(false);
        requestP.setVisible(false);
        boss();
        loadNotification();
        jLabel14.setText(boss.getter("name") + " " + boss.getter("lname"));
    } catch (IOException ex) {
        Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_formWindowOpened
    int x, y;
    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        this.setLocation((int) evt.getXOnScreen() - x, (int) evt.getYOnScreen() - y);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        jPanel3.setVisible(false);
        notificationP = false;
        jPanel1.setVisible(false);
        showPanel1 = false;
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/showB.png")));

    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
    try {
        if(new File("user.txt").delete() ) System.out.println("user.txt Deleted :D ");
        FileWriter fw = new FileWriter("login.conf");
        PrintWriter pw =new PrintWriter(fw);
        pw.println(this.getLocationOnScreen().x);
        pw.print(this.getLocationOnScreen().y);
        pw.close();
        timer.cancel();
        this.dispose();
        new login().setVisible(true);
    } catch (IOException ex) {
        Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.setState(Boss.ICONIFIED);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jRadioButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseClicked
        loadClient();
        loadClient1();
        jCheckBox3.setVisible(false);
        jCheckBox3.setVisible(false);
        jTextField4.setVisible(true);
        jTextField4.setEnabled(true);
        jLabel29.setVisible(false);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/prob.png")));
        jLabel28.setVisible(true);
        if (jTextField4.getText().equals("---") || jTextField4.getText().equals("Password") || jTextField4.getText().equals("Transfer Address") || jTextField4.getText().isEmpty()) {
            jTextField4.setText("Problem");
        }
        jLabel28.setVisible(true);
    }//GEN-LAST:event_jRadioButton3MouseClicked

    private void jRadioButton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseReleased
        //        clicked = false;clicked1 = false;clicked2 = false;clicked3 = false;
    }//GEN-LAST:event_jRadioButton3MouseReleased

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        loadClient();
        loadClient1();
        jTextField4.setVisible(true);
        jTextField4.setEnabled(true);
        jLabel29.setVisible(false);
        jLabel28.setVisible(false);
        jCheckBox3.setVisible(false);
        jTextField4.setText("Transfer Address");
        if (jTextField4.getText().equals("---") || jTextField4.getText().equals("Problem") || jTextField4.getText().isEmpty()) {
            jTextField4.setText("Transfer Address");
        }
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void jRadioButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2MouseEntered

    private void jRadioButton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseReleased
        //clicked = false;clicked1 = false;clicked2 = false;clicked3 = false;
    }//GEN-LAST:event_jRadioButton2MouseReleased

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        loadClient();
        loadClient1();
        jCheckBox3.setVisible(true);
        jTextField4.setVisible(true);
        jTextField4.setEnabled(true);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/pass.png")));
        jLabel28.setVisible(true);
        jCheckBox3.setVisible(true);
        if (jTextField4.getText().equals("---") || jTextField4.getText().equals("Problem") || jTextField4.getText().equals("Transfer Address") || jTextField4.getText().isEmpty()) {
            jTextField4.setText("Password");
        }
        jLabel28.setVisible(true);
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseReleased
        //clicked = false;clicked1 = false;clicked2 = false;clicked3 = false;
    }//GEN-LAST:event_jRadioButton1MouseReleased

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1MouseDragged

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        if (jTextField1.getText().equalsIgnoreCase("client name")) {
            jTextField1.setText(null);

        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        String jf1 = jTextField1.getText();
        if (jf1.isEmpty()) {
            jTextField1.setText("Client Name");
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2MouseDragged

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        // TODO add your handling code here:
        if (jTextField2.getText().equalsIgnoreCase("phone number")) {
            jTextField2.setText(null);
        }
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusLost
        // TODO add your handling code here:
        if (jTextField2.getText().isEmpty()) {
            jTextField2.setText("Phone Number");
        }
    }//GEN-LAST:event_jTextField2FocusLost

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3MouseDragged

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        // TODO add your handling code here:
        if (jTextField3.getText().equalsIgnoreCase("address 1") || jTextField3.getText().equalsIgnoreCase("address")) {
            jTextField3.setText(null);
        }
    }//GEN-LAST:event_jTextField3FocusGained

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
        // TODO add your handling code here:
        if (jTextField3.getText().isEmpty()) {
            jTextField3.setText("Address");
        }
    }//GEN-LAST:event_jTextField3FocusLost

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField3MouseClicked

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked

    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jCheckBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox2MouseClicked

    }//GEN-LAST:event_jCheckBox2MouseClicked

    private void jTextField4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4MouseDragged

    private void jTextField4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusGained
        if (jTextField4.getText().equalsIgnoreCase("Transfer Address") || jTextField4.getText().equalsIgnoreCase("Problem") || jTextField4.getText().equalsIgnoreCase("Password")) {
            jTextField4.setText(null);
        }
    }//GEN-LAST:event_jTextField4FocusGained

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
        if (jTextField4.getText().isEmpty()) {
            jTextField4.setText("Transfer Address");
        }
    }//GEN-LAST:event_jTextField4FocusLost

    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4MouseClicked

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/newBH.png")));
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseExited
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/newB.png")));

    }//GEN-LAST:event_jLabel6MouseExited

    private void jLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseEntered
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/listBH.png")));
    }//GEN-LAST:event_jLabel7MouseEntered

    private void jLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseExited
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/listB.png")));

    }//GEN-LAST:event_jLabel7MouseExited

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/logoutBH.png")));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/showBC.png")));
            jPanel1.setVisible(true);
            showPanel1 = true;
    }//GEN-LAST:event_jLabel5MouseEntered

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/logoutB.png")));

    }//GEN-LAST:event_jLabel5MouseExited

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/sendBH.png")));
    }//GEN-LAST:event_jLabel13MouseEntered

    private void jLabel13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseExited
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/sendB.png")));
    }//GEN-LAST:event_jLabel13MouseExited

    private void jLabel13MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseReleased
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/sendBH.png")));
    }//GEN-LAST:event_jLabel13MouseReleased

    private void jLabel13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MousePressed
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/sendBP.png")));
    }//GEN-LAST:event_jLabel13MousePressed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        list.setVisible(false);
        addP.setVisible(true);
        mainP.setVisible(false);
        requestP.setVisible(false);
        showteams();
        r = new Request();
        jLabel19.setVisible(false);
        jLabel13.setVisible(true);
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jCheckBox3.setSelected(true);
        jLabel29.setVisible(false);
        jLabel28.setVisible(true);
        jTextField1.setText("Client name");
        jTextField2.setText("Phone number");
        jTextField3.setText("Address");
        jTextField4.setText("Password");


    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        list.setVisible(true);
        addP.setVisible(false);
        mainP.setVisible(false);
        jPanel2.setVisible(false);
        jScrollPane2.setVisible(true);
        requestP.setVisible(false);
        showrecords();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel15MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseEntered
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/editBH.png")));
    }//GEN-LAST:event_jLabel15MouseEntered

    private void jLabel15MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseExited
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/editB.png")));
    }//GEN-LAST:event_jLabel15MouseExited

    private void jLabel15MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MousePressed
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/editBP.png")));
    }//GEN-LAST:event_jLabel15MousePressed

    private void jLabel15MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseReleased
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/editBH.png")));
    }//GEN-LAST:event_jLabel15MouseReleased

    private void jLabel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseEntered
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/deleteBH.png")));
    }//GEN-LAST:event_jLabel16MouseEntered

    private void jLabel16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseExited
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/deleteB.png")));
    }//GEN-LAST:event_jLabel16MouseExited

    private void jLabel16MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MousePressed
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/deleteBP.png")));
    }//GEN-LAST:event_jLabel16MousePressed

    private void jLabel16MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseReleased
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/deleteBH.png")));
    }//GEN-LAST:event_jLabel16MouseReleased

    private void jLabel47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel47MouseClicked

        //deleteRE(getSelectedrequest1());
        jPanel2.setVisible(false);
        //showrecordsB();
    }//GEN-LAST:event_jLabel47MouseClicked

    private void jLabel47MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel47MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel47MouseEntered

    private void jLabel47MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel47MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel47MouseExited

    private void jLabel46MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel46MouseClicked
        jPanel2.setVisible(false);
    }//GEN-LAST:event_jLabel46MouseClicked

    private void jLabel46MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel46MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel46MouseEntered

    private void jLabel46MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel46MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel46MouseExited

    private void jLabel48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel48MouseClicked
        deleteRE();
        showrecords();
        jPanel2.setVisible(false);
        jScrollPane2.setVisible(true);
    }//GEN-LAST:event_jLabel48MouseClicked

    private void jLabel48MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel48MouseEntered
        jLabel48.setBackground(new Color(36, 240, 199));    }//GEN-LAST:event_jLabel48MouseEntered

    private void jLabel48MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel48MouseExited
        jLabel48.setBackground(new Color(26, 188, 156));
    }//GEN-LAST:event_jLabel48MouseExited

    private void jLabel49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel49MouseClicked
        jPanel2.setVisible(false);
        jScrollPane2.setVisible(true);

    }//GEN-LAST:event_jLabel49MouseClicked

    private void jLabel49MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel49MouseEntered
        jLabel49.setBackground(new Color(36, 240, 199));
    }//GEN-LAST:event_jLabel49MouseEntered

    private void jLabel49MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel49MouseExited
        jLabel49.setBackground(new Color(26, 188, 156));
    }//GEN-LAST:event_jLabel49MouseExited

    private void jLabel19MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseEntered
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/updateBH.png")));
    }//GEN-LAST:event_jLabel19MouseEntered

    private void jLabel19MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseExited
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/updateB.png")));
    }//GEN-LAST:event_jLabel19MouseExited

    private void jLabel19MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MousePressed
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/updateBP.png")));
    }//GEN-LAST:event_jLabel19MousePressed

    private void jLabel19MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseReleased
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/updateBH.png")));
    }//GEN-LAST:event_jLabel19MouseReleased
    String sss;
    int re;
    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        try {
            showteams();
            jLabel19.setVisible(true);
            jLabel13.setVisible(false);
            list.setVisible(false);
            addP.setVisible(true);
            mainP.setVisible(false);
            jCheckBox1.setSelected(false);
            jCheckBox1.setSelected(false);
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "select * from request where IDREQUEST =" + getSelectedrequest();
            ResultSet rs = st.executeQuery(sql);
            rs.next();
            re = rs.getInt("idrequest");
            switch (rs.getString("Net")) {
                case "ADSL":
                    jCheckBox1.setSelected(true);
                    break;
                case "Phone Line":
                    jCheckBox2.setSelected(true);
                    break;
                default:
                    jCheckBox1.setSelected(true);
                    jCheckBox2.setSelected(true);
                    break;
            }
            jTextField1.setText(rs.getString("CLIENTNAME"));
            jTextField2.setText(rs.getString("TELCLIENT"));
            jTextField3.setText(rs.getString("ADDRESS1"));
            jTextField4.setText(rs.getString("ADDRESS2"));
            if (rs.getInt("ID_TYPE") == 1) {
                jRadioButton1.setSelected(true);
                jTextField4.enable(false);
            }
            if (rs.getInt("ID_TYPE") == 2) {
                jRadioButton2.setSelected(true);
                jTextField4.enable(true);
                sss = jTextField4.getText();
            }
            if (rs.getInt("ID_TYPE") == 3) {
                jRadioButton3.setSelected(true);
                jTextField4.enable(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        jPanel2.setVisible(true);
        jScrollPane2.setVisible(false);
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        if (getSelectedTeam() > 0) {
            try {
                connect = new Connection();
                Statement stmt = connect.con.createStatement();
                if ((jCheckBox1.isSelected() || jCheckBox2.isSelected())) {
                    int type = 1;
                    String Type = null;
                    if (jRadioButton1.isSelected()) {
                        type = 1;
                    }
                    if (jRadioButton2.isSelected()) {
                        type = 2;
                    }
                    if (jRadioButton3.isSelected()) {
                        type = 3;
                    }
                    if (jCheckBox2.isSelected()) {
                        Type = "ADSL";
                    }
                    if (jCheckBox1.isSelected()) {
                        Type = "Phone Line";
                    }
                    if (jCheckBox1.isSelected() && jCheckBox2.isSelected()) {
                        Type = "Phone Line and ADSL";
                    }
                    r.setter("clientTel", jTextField2.getText());
                    r.setter("address1", jTextField3.getText());
                    r.setter("address2", jTextField4.getText());
                    r.setter("clientName", jTextField1.getText());
                    r.setter("requestType", type + "");
                    r.setter("requestNet", Type);
                    r.setter("idRequest", getLastId() + 1);
                    r.setter("idBoss", boss.getId());
                    r.setter("idTeam", getSelectedTeam());
                    r.setter("seen", false);
                    r.setter("error", false);
                    r.setter("validated", false);
                    r.setter("seenDate", new Date("1990/01/01"));
                    r.setter("errorDate", new Date("1990/01/01"));
                    r.setter("validatedDate", new Date("1990/01/01"));
                    Calendar cal = Calendar.getInstance();
                    if (jCheckBox3.isSelected()) {
                        String num = jTextField2.getText().substring(1, jTextField2.getText().length());
                        String sql = "Select * from client where fullname = '" + jTextField1.getText() + "' or phone like '%" + jTextField2.getText() + "' or phone like '%" + num + "'";
                        ResultSet rs = stmt.executeQuery(sql);
                        if (!rs.next()) {
                            String s = "INSERT INTO client(Fullname,phone,address,password,service)" + "values('" + jTextField1.getText() + "','" + jTextField2.getText() + "','" + jTextField3.getText() + "','" + jTextField4.getText() + "','" + Type + "')";
                            stmt.execute(s);
                            sql = "Select * from client where fullname = '" + jTextField1.getText() + "'";
                            rs = stmt.executeQuery(sql);
                            if (rs.next()) {
                                sql = "Insert Into request(IDREQUEST,Net,ID_TYPE,ID_USER,IDTEAM,TELCLIENT,ADDRESS1,ADDRESS2,CLIENTNAME,SEEN,ERROR,FINISHED,SEENDATE,ERRORDATE,FINISHEDDATE,SENDDATE,vboss,problem,idclient)" + "values ('" + r.intGetter("idRequest") + "','" + Type + "','" + type + "','" + r.intGetter("idBoss") + "','" + r.intGetter("idTeam") + "','" + r.stringGetter("clientTel") + "','" + r.stringGetter("address1") + "','" + r.stringGetter("address2") + "','" + r.stringGetter("clientName") + "',"
                                        + "'" + 1 + "','" + 1 + "','" + 1 + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date("1901/1/01")) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date("1901/01/01")) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date("1901/01/01")) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime()) + "',1,'" + jTextField4.getText() + "'," + rs.getInt("id") + ")";
                                stmt.executeUpdate(sql);
                                jLabel20.setText("");
                                list.setVisible(true);
                                addP.setVisible(false);
                                mainP.setVisible(false);
                                jPanel2.setVisible(false);
                                showrecords();
                            }
                        }else {
                            jLabel26.setVisible(true);
                            jLabel26.setText("Client Exists");
                        }
                    }else{
                        String sql = "Select * from client where fullname = '" + jTextField1.getText() + "'";
                        ResultSet rs = stmt.executeQuery(sql);
                        if (rs.next()) {
                                sql = "Insert Into request(IDREQUEST,Net,ID_TYPE,ID_USER,IDTEAM,TELCLIENT,ADDRESS1,ADDRESS2,CLIENTNAME,SEEN,ERROR,FINISHED,SEENDATE,ERRORDATE,FINISHEDDATE,SENDDATE,vboss,problem,idclient)" + "values ('" + r.intGetter("idRequest") + "','" + Type + "','" + type + "','" + r.intGetter("idBoss") + "','" + r.intGetter("idTeam") + "','" + r.stringGetter("clientTel") + "','" + r.stringGetter("address1") + "','" + r.stringGetter("address2") + "','" + r.stringGetter("clientName") + "',"
                                        + "'" + 1 + "','" + 1 + "','" + 1 + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date("1901/1/01")) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date("1901/01/01")) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(new Date("1901/01/01")) + "','" + new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime()) + "',1,'" + jTextField4.getText() + "'," + rs.getInt("id") + ")";
                                stmt.executeUpdate(sql);
                                jLabel20.setText("");
                                list.setVisible(true);
                                addP.setVisible(false);
                                mainP.setVisible(false);
                                jPanel2.setVisible(false);
                                showrecords();
                            } else {
                                jLabel26.setVisible(true);
                                jLabel26.setText("Client does not exist !");
                            }
                    }
                } else {
                    jLabel26.setVisible(true);
                    jLabel26.setText("Please Select ADSL or Phone Line");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        int type = 1;
        String Type = null;
        int team = getSelectedTeam();
        if (jRadioButton1.isSelected()) {
            type = 1;
        }
        if (jRadioButton2.isSelected()) {
            type = 2;
        }
        if (jRadioButton3.isSelected()) {
            type = 3;
        }

        if (jCheckBox1.isSelected()) {
            Type = "ADSL";
        }
        if (jCheckBox2.isSelected()) {
            Type = "Phone Line";
        }
        if (jCheckBox1.isSelected() && jCheckBox2.isSelected()) {
            Type = "Phone Line and ADSL";
        }
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "UPDATE  request SET net='" + Type + "',idteam=" + team + ",id_type=" + type + ",CLIENTNAME ='" + jTextField1.getText() + "',TELCLIENT='" + jTextField2.getText() + "',ADDRESS1='" + jTextField3.getText() + "',ADDRESS2='" + jTextField4.getText() + "' where idrequest = " + re;
            st.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
        list.setVisible(true);
        addP.setVisible(false);
        mainP.setVisible(false);
        jPanel2.setVisible(false);
        showrecords();
    }//GEN-LAST:event_jLabel19MouseClicked
    boolean notificationP = false;
    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        jPanel3.setVisible(true);
        notificationP = false;
        jPanel1.setVisible(false);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/showB.png")));
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        jPanel3.setVisible(false);
        notificationP = false;
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        jPanel3.setVisible(true);
        notificationP = false;
        jPanel1.setVisible(false);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        jLabel23.setVisible(false);
        if (evt.getClickCount() == 2) {
            try {
                connect = new Connection();
                Statement st = connect.con.createStatement();
                String SQL = "SELECT * FROM request where idrequest =" + getSelectedrequest();
                ResultSet rq = st.executeQuery(SQL);
                rq.next();
                /**
                 * **************************
                 */
                String type = "";
                if (parseInt(rq.getString("id_type")) == 1) {
                    type = "Instalation";
                }
                if (parseInt(rq.getString("id_type")) == 2) {
                    type = "Transfer";
                }
                if (parseInt(rq.getString("id_type")) == 3) {
                    type = "Maintenamce";
                }
                /**
                 * ***********************
                 */
                Document document = new Document();
                PdfWriter.getInstance(document, new FileOutputStream("report.pdf"));
                document.open();

                Paragraph paragraph = new Paragraph();
                paragraph.add(new Paragraph("Request : \n", FontFactory.getFont(FontFactory.TIMES, 20, Font.BOLD, BaseColor.DARK_GRAY)));
                paragraph.add("ID Request :");
                paragraph.add(rq.getString("idRequest") + "");
                paragraph.add("\nRequest type :");
                paragraph.add(type);
                paragraph.add("\nClient name :");
                paragraph.add(rq.getString("clientName"));
                paragraph.add("\nPhone number :");
                paragraph.add(rq.getString("TELCLIENT"));
                paragraph.add("\nAddress :");
                paragraph.add(rq.getString("address1"));
                if (parseInt(rq.getString("id_type")) == 1) {

                }
                if (parseInt(rq.getString("id_type")) == 2) {
                    paragraph.add("\nTransfer Address :");
                    paragraph.add(rq.getString("address2"));
                }
                if (parseInt(rq.getString("id_type")) == 3) {
                    paragraph.add("\nproblem :");
                    paragraph.add(rq.getString("problem"));
                }
                paragraph.add("\nTeam :");
                paragraph.add(rq.getString("IDTEAM") + "\n");
                /**
                 * ********************
                 */
                String sql = "Select * from report where IDREQUEST = '" + getSelectedrequest() + "' ";
                ResultSet rs = st.executeQuery(sql);
                /**
                 * *******************
                 */
                if (rs.next()) {
                    paragraph.add(new Paragraph("Report : \n", FontFactory.getFont(FontFactory.TIMES, 20, Font.BOLD, BaseColor.DARK_GRAY)));
                    paragraph.add(rs.getString("REPORT") + "\n");
                    Paragraph date = new Paragraph(rs.getString("REPORTDATE").substring(0, 10));
                    date.setAlignment(Element.ALIGN_RIGHT);
                    document.add(date);
                } else {
                    paragraph.add(new Paragraph("Team haven't reported yet ! \n", FontFactory.getFont(FontFactory.TIMES, 20, Font.BOLD, BaseColor.DARK_GRAY)));
                }

                Paragraph title = new Paragraph("Report\n", FontFactory.getFont(FontFactory.HELVETICA, 20, Font.BOLD, BaseColor.BLACK));
                title.setAlignment(Element.ALIGN_CENTER);

                document.add(title);
                document.add(paragraph);
                document.close();
                /* Open Pdf */
                Desktop desktop = Desktop.getDesktop();
                if (desktop.isSupported(Desktop.Action.OPEN)) {
                    desktop.open(new File("report.pdf"));
                } else {
                    System.out.println("Open is not supported");
                }
                sql = "Update report set seen = " + 1 + " where IDREQUEST = " + getSelectedrequest();
                st.executeUpdate(sql);
                loadNotification();
            } catch (SQLException | DocumentException | IOException ex) {
                JOptionPane.showMessageDialog(this, "Report.pdf is already open, Please close it first, then reopen the file");
            }
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
    try {
        connect = new Connection();
        Statement stmt = connect.con.createStatement();
        String sql = "Select count(vboss) as j from request,report  where request.IDREQUEST = report.IDREQUEST and request.id_user = " + boss.getId() + " and report.seen = " + 0 + " and request.idTeam >= " + 0;
        ResultSet rs = stmt.executeQuery(sql);
        rs.next();
        if (rs.getInt("j") > 0) {
            list.setVisible(true);
            addP.setVisible(false);
            mainP.setVisible(false);
            jPanel2.setVisible(false);
            requestP.setVisible(false);
            jScrollPane2.setVisible(true);
            jPanel3.setVisible(false);
            showrecordsR();
        }
    } catch (SQLException ex) {
        Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jLabel26.setVisible(false);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        loadField();
    }//GEN-LAST:event_jTable3MouseClicked

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable4MouseClicked

    private void jLabel33MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseEntered
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/acceptBH.png")));
    }//GEN-LAST:event_jLabel33MouseEntered

    private void jLabel33MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseExited
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/acceptB.png")));
    }//GEN-LAST:event_jLabel33MouseExited

    private void jLabel33MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MousePressed
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/acceptBP.png")));
    }//GEN-LAST:event_jLabel33MousePressed

    private void jLabel33MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseReleased
        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/acceptBH.png")));
    }//GEN-LAST:event_jLabel33MouseReleased

    private void jLabel32MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseEntered
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineBH.png")));
    }//GEN-LAST:event_jLabel32MouseEntered

    private void jLabel32MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseExited
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineB.png")));
    }//GEN-LAST:event_jLabel32MouseExited

    private void jLabel32MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MousePressed
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineBP.png")));
    }//GEN-LAST:event_jLabel32MousePressed

    private void jLabel32MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseReleased
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineBH.png")));
    }//GEN-LAST:event_jLabel32MouseReleased
    public void LoadRequest(){
        try {
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            String sql = "Select count(vboss) as j from request where vboss = " + 0;
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            if (rs.getInt("j") > 0) {
                showReqeusts();
                showteams1();
                requestP.setVisible(true);
                addP.setVisible(false);
                mainP.setVisible(false);
                list.setVisible(false);
                jTable3.setRowSelectionInterval(0, 0);
                jTable4.setRowSelectionInterval(0, 0);
                loadField();
                jPanel3.setVisible(false);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        LoadRequest();
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        try {
            int iduser = boss.getId();
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            int rea = getSelectedR();
            System.out.println(re);
            String sql = "update request set vboss =" + 1 + ",idteam = +" + getSelectedTeam1() + ",id_user =" + iduser + " where idrequest = " + rea;
            stmt.executeUpdate(sql);
            loadNotification();
            showReqeusts();
            showteams1();
            sql = "Select count(vboss) as j from request where vboss = " + 0;
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            if (rs.getInt("j") == 0) {
                list.setVisible(true);
                addP.setVisible(false);
                mainP.setVisible(false);
                jPanel2.setVisible(false);
                jScrollPane2.setVisible(true);
                requestP.setVisible(false);
                showrecords();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel33MouseClicked

    private void jPanel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseExited

    }//GEN-LAST:event_jPanel3MouseExited

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        jPanel4.setVisible(true);
        jPanel1.setVisible(false);
        jPanel3.setVisible(false);        
        jLabel32.setVisible(false);
        jLabel33.setVisible(false);
        jScrollPane4.setVisible(false);
        jScrollPane3.setVisible(false);
        idrequest = getSelectedR();
    }//GEN-LAST:event_jLabel32MouseClicked
    boolean n = true;
    private void jCheckBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox3MouseClicked
        if (n) {
            n = false;
            jTextField4.setVisible(false);
            jTextField4.setEnabled(false);
            jLabel29.setVisible(true);

        } else {
            n = true;
            jTextField4.setVisible(true);
            jTextField4.setEnabled(true);
            jLabel29.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox3MouseClicked

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loadClient();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loadClient1();
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited

    }//GEN-LAST:event_jPanel1MouseExited

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
           
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        jPanel4.setVisible(false);
        jLabel32.setVisible(true);
        jLabel33.setVisible(true);
        jScrollPane4.setVisible(true);
        jScrollPane3.setVisible(true);
        try {
            int iduser = boss.getId();
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            int rea = getSelectedR();
            String sql = "update request set vboss =" + 2 + ",id_user =" + iduser + " where idrequest = " + rea;
            stmt.executeUpdate(sql);
            loadNotification();
            showReqeusts();
            showteams1();
            sql = "Select count(vboss) as j from request where vboss = " + 0;
            ResultSet rs = stmt.executeQuery(sql);
            sendReport();
            rs.next();
            if (rs.getInt("j") == 0) {
                list.setVisible(true);
                addP.setVisible(false);
                mainP.setVisible(false);
                jPanel2.setVisible(false);
                jScrollPane2.setVisible(true);
                requestP.setVisible(false);
                showrecords();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel34MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseEntered
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineBH.png")));
    }//GEN-LAST:event_jLabel34MouseEntered

    private void jLabel34MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseExited
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineB.png")));
    }//GEN-LAST:event_jLabel34MouseExited

    private void jLabel34MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MousePressed
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineBP.png")));
    }//GEN-LAST:event_jLabel34MousePressed

    private void jLabel34MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseReleased
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/declineBH.png")));
    }//GEN-LAST:event_jLabel34MouseReleased

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        jPanel4.setVisible(false);
        jLabel32.setVisible(true);
        jLabel33.setVisible(true);
        jScrollPane4.setVisible(true);
        jScrollPane3.setVisible(true);
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jTextArea2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea2MouseClicked
        if(jTextArea2.getText().equals("Write your reasons to decline this requests")) jTextArea2.setText("");
        else if(jTextArea2.getText().equals("")) jTextArea2.setText("Write your reasons to decline this requests");
    }//GEN-LAST:event_jTextArea2MouseClicked
    public int getLastReport() {
        int idr = 0;
        try {

            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "Select * from report";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                idr = parseInt(rs.getString("idreport"));
            }

        } catch (SQLException ex) {
            Logger.getLogger(Sub.class.getName()).log(Level.SEVERE, null, ex);
        }
        return idr + 1;
    }
    public void setreq() {
        try {
            int idrequest = getSelectedR();
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            String SQL  = "Update request set finished =" + 1 + ",error =" + 2 + " where IDREQUEST=" + idrequest;
            stmt.executeUpdate(SQL);
        } catch (SQLException ex) {
            Logger.getLogger(Sub.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    int idrequest;
    public void sendReport() {
        try {
            setreq();
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            int idreport = getLastReport();
            Calendar cal = Calendar.getInstance();
            System.out.println(idrequest);
            String SQL = "INSERT INTO report(IDREPORT,IDREQUEST,REPORT,REPORTDATE,idSender,seen)" + "values ('" + idreport + "'," + idrequest + ",'" + jTextArea2.getText() + "','" + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(cal.getTime())+"',"+boss.getId()+ ",0)";
            stmt.executeUpdate(SQL);
        } catch (SQLException ex) {
            Logger.getLogger(Sub.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void loadClient() {
        try {
            Statement stmt = connect.con.createStatement();
            String sql = "Select * from client where fullname = '" + jTextField1.getText() + "'";
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                n = false;
                jTextField4.setVisible(false);
                jTextField4.setEnabled(false);
                jLabel29.setVisible(true);
                connect = new Connection();
                jCheckBox3.setSelected(false);
                jTextField2.setText(rs.getString("phone"));
                jTextField3.setText(rs.getString("address"));
                if (rs.getString("service").equalsIgnoreCase("Phone Line and ADSL")) {
                    jCheckBox1.setSelected(true);
                    jCheckBox2.setSelected(true);
                }
                if (rs.getString("service").equalsIgnoreCase("Adsl")) {
                    jCheckBox1.setSelected(false);
                    jCheckBox2.setSelected(true);
                }
                if (rs.getString("service").equalsIgnoreCase("Phone Line")) {
                    jCheckBox1.setSelected(true);
                    jCheckBox2.setSelected(false);
                }
                if (jRadioButton2.isSelected()) {
                    jCheckBox1.setEnabled(false);
                    jCheckBox2.setEnabled(false);
                }
                if (jRadioButton3.isSelected()) {
                    if (rs.getString("service").equalsIgnoreCase("Adsl and Phone")) {
                        jCheckBox1.setEnabled(true);
                        jCheckBox2.setEnabled(true);
                    }
                    if (rs.getString("service").equalsIgnoreCase("Adsl")) {
                        jCheckBox1.setEnabled(false);
                        jCheckBox2.setEnabled(true);
                    }
                    if (rs.getString("service").equalsIgnoreCase("Phone Line")) {
                        jCheckBox1.setEnabled(true);
                        jCheckBox2.setEnabled(false);
                    }
                }
                if (jRadioButton1.isSelected()) {
                    jCheckBox1.setEnabled(true);
                    jCheckBox2.setEnabled(true);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadClient1() {
        try {
            n = false;
            jTextField4.setVisible(false);
            jTextField4.setEnabled(false);
            jLabel29.setVisible(true);
            connect = new Connection();
            jCheckBox3.setSelected(false);
            Statement stmt = connect.con.createStatement();
            String num = jTextField2.getText().substring(1, jTextField2.getText().length());
            String sql = "Select * from client where phone like '%" + jTextField2.getText() + "' or phone like '%" + num + "'";
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                jTextField2.setText(rs.getString("phone"));
                jTextField3.setText(rs.getString("address"));
                if (rs.getString("service").equalsIgnoreCase("Adsl and Phone")) {
                    jCheckBox1.setSelected(true);
                    jCheckBox2.setSelected(true);
                }
                if (rs.getString("service").equalsIgnoreCase("Adsl")) {
                    jCheckBox1.setSelected(false);
                    jCheckBox2.setSelected(true);
                }
                if (rs.getString("service").equalsIgnoreCase("Phone Line")) {
                    jCheckBox1.setSelected(true);
                    jCheckBox2.setSelected(false);
                }
                if (jRadioButton2.isSelected()) {
                    jCheckBox1.setEnabled(false);
                    jCheckBox2.setEnabled(false);
                }
                if (jRadioButton3.isSelected()) {
                    if (rs.getString("service").equalsIgnoreCase("Adsl and Phone")) {
                        jCheckBox1.setEnabled(true);
                        jCheckBox2.setEnabled(true);
                    }
                    if (rs.getString("service").equalsIgnoreCase("Adsl")) {
                        jCheckBox1.setEnabled(false);
                        jCheckBox2.setEnabled(true);
                    }
                    if (rs.getString("service").equalsIgnoreCase("Phone Line")) {
                        jCheckBox1.setEnabled(true);
                        jCheckBox2.setEnabled(false);
                    }
                }
                if (jRadioButton1.isSelected()) {
                    jCheckBox1.setEnabled(true);
                    jCheckBox2.setEnabled(true);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadField() {
        try {
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            String sql = "Select * from request where idrequest = " + getSelectedR();
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            jTextArea1.setText("Client name : " + rs.getString("clientname") + "\nPhone numner : " + rs.getString("telclient") + "\nAdresse : " + rs.getString("ADDRESS1") + "\nType : " + rs.getString("net"));
            if (rs.getInt("id_type") == 2) {
                jTextArea1.setText(jTextArea1.getText() + "\nTransfer Address : " + rs.getString("ADDRESS2"));
            } else {
                jTextArea1.setText(jTextArea1.getText() + "\nProblem :" + rs.getString("problem"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showReqeusts() {
        try {
            model = (DefaultTableModel) jTable3.getModel();
            model.getDataVector().removeAllElements();
            revalidate();
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            String sql = "Select * from request where vboss = " + 0;
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt("idrequest")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void boss() {
        try {
            FileReader fr = new FileReader("user.txt");
            BufferedReader br = new BufferedReader(fr);
            int iduser = parseInt(br.readLine());
            fr.close();
            connect = new Connection();
            Statement stmt = connect.con.createStatement();
            String SQL = "SELECT * FROM user where ID_USER =" + iduser;
            ResultSet results = stmt.executeQuery(SQL);
            results.next();
            boss = new boss(parseInt(results.getString("id_user")), results.getString("name"), results.getString("lastname"), results.getString("nid"), results.getString("position"), results.getString("password"));
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showN() {
        if (!notificationP) {
            jPanel3.setVisible(true);
            notificationP = true;
        } else {
            jPanel3.setVisible(false);
            notificationP = false;
        }
    }
    int Notification = 0;
    public void loadNotification() {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "Select count(request.idrequest) as i  from request,report  where request.IDREQUEST = report.IDREQUEST and request.id_user = " + boss.getId() + " and report.seen = " + 0 + " and request.idTeam >=  " + 0;
            ResultSet rs = st.executeQuery(sql);
            rs.next();
            int i = rs.getInt("i");
            
            if (i > 1) {
                jLabel24.setText(i + " New reports");
            } else {
                jLabel24.setText(i + " New report");
            }
            
            sql = "Select count(vboss) as j from request where vboss = " + 0;
            rs = st.executeQuery(sql);
            rs.next();
            int j = rs.getInt("j");
            if (i > 1) {
                jLabel25.setText(j + " New requests");
            } else {
                jLabel25.setText(j + " New request");
            }
            i += j;
            Notification = i;
            if(i <= 99 ){
                jLabel8.setFont(new java.awt.Font("Arial", 1, 14));
                jLabel8.setText(i + "");
            }
            else{
                jLabel8.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
                jLabel8.setText(i + "");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showrecordsR() {
        model = (DefaultTableModel) jTable2.getModel();
        model.getDataVector().removeAllElements();
        revalidate();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
                String sql = "Select * from request,report  where request.IDREQUEST = report.IDREQUEST and request.id_user = " + boss.getId() + " and report.seen = " + 0 + " and idTeam > " + 0;
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                   String v = "";
                   String seen = "";
                   if (rs.getInt("seen") == 1) {
                       seen = "Not yet";
                   }
                   if (rs.getInt("seen") == 2) {
                       seen = "Yes";
                   }
                   if (rs.getInt("error") == 2) {
                       v = "Error";
                   }
                   if (rs.getInt("Finished") == 2) {
                       v = "Validated";
                   }
                   model.addRow(new Object[]{rs.getString("IDREQUEST"), "Team " + rs.getString("IDTEAM"), rs.getString("SENDDATE"), seen, v});
               }   
            
            
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    public void showrecords() {
        model = (DefaultTableModel) jTable2.getModel();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql = "Select * from request where ID_USER =" + boss.getId() + " and vboss != " + 2;
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                String v = "";
                String seen = "";

                if (rs.getInt("seen") == 1) {
                    seen = "Not yet";
                }
                if (rs.getInt("seen") == 2) {
                    seen = "Yes";
                }
                if (rs.getInt("error") == 2) {
                    v = "Error";
                }
                if (rs.getInt("Finished") == 2) {
                    v = "Validated";
                }
                if (rs.getInt("error") == 1 && rs.getInt("Finished") == 1) {
                    v = "In Progress";
                }

                model.addRow(new Object[]{rs.getString("IDREQUEST"), "Team " + rs.getString("IDTEAM"), rs.getString("SENDDATE"), seen, v});
            }
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    private int getSelectedrequest() {
        try {
            model = (DefaultTableModel) jTable2.getModel();
            return parseInt((String) jTable2.getValueAt(jTable2.getSelectedRow(), 0));
        } catch (Exception e) {
            jLabel23.setVisible(true);
        }
        return 0;

    }

    private int getSelectedTeam() {
        try {
            model = (DefaultTableModel) jTable1.getModel();
            return parseInt((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString().substring(5, 6));
        } catch (Exception e) {
            jLabel26.setVisible(true);
        }
        return 0;
    }

    private int getSelectedTeam1() {
        try {
            model = (DefaultTableModel) jTable4.getModel();
            return parseInt((String) jTable4.getValueAt(jTable4.getSelectedRow(), 0).toString().substring(5, 6));
        } catch (Exception e) {
            jLabel26.setVisible(true);
        }
        return 0;
    }

    private int getSelectedR() {
        try {
            model = (DefaultTableModel) jTable3.getModel();
            return (int) jTable3.getValueAt(jTable3.getSelectedRow(), 0);
        } catch (Exception e) {
            //jLabel26.setVisible(true);
        }
        return 0;
    }

    public void showteams() {
        model = (DefaultTableModel) jTable1.getModel();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql = "Select * from team";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{"Team " + rs.getString("IDTEAM")});
            }
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    public void showteams1() {
        model = (DefaultTableModel) jTable4.getModel();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql = "Select * from team";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{"Team " + rs.getString("IDTEAM")});
            }
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    public void deleteRE() {
        if (getSelectedrequest() > 0) {
            try {
                connect = new Connection();
                Statement st = connect.con.createStatement();
                String sql = "delete from request where IDREQUEST =" + getSelectedrequest();
                st.execute(sql);
                sql = "delete from report where IDREQUEST =" + getSelectedrequest();
                st.execute(sql);
            } catch (SQLException ex) {
                Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public int getLastId() throws ClassNotFoundException {
        int idr = 0;
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "Select * from request";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                idr = parseInt(rs.getString("idrequest"));
            }
        } catch (SQLException ez) {
            Logger.getLogger(Boss.class.getName()).log(Level.SEVERE, null, ez);
        }

        return idr;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Boss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Boss().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addP;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JPanel list;
    private javax.swing.JPanel mainP;
    private javax.swing.JPanel requestP;
    // End of variables declaration//GEN-END:variables
    public boss boss;
    public DefaultTableModel model;
    public Wired.Request r;
    Connection connect;
}
