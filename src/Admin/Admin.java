/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import AppPackage.AnimationClass;
import Login.login;
import Wired.Connection;
import java.awt.Color;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reda ben
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        Border blackline = BorderFactory.createLineBorder(Color.black);
        jLabel1.setBorder(blackline);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLogo = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jTeam = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jEmp = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jBoss = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 560));
        setMinimumSize(new java.awt.Dimension(800, 560));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(800, 560));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/showB.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/min.png"))); // NOI18N
        jLabel9.setText("jLabel3");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 16, 16));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/closeB.png"))); // NOI18N
        jLabel4.setText("jLabel3");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 16, 16));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/BossB.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel6MouseExited(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, 120, 90, 90));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/TeamB.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel7MouseExited(evt);
            }
        });
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, 310, 90, 90));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/EMPB.png"))); // NOI18N
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel8MouseExited(evt);
            }
        });
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, 210, 90, 90));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/logoutB.png"))); // NOI18N
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel10MouseExited(evt);
            }
        });
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, 400, 90, 90));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/menu.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, 68, 107, 492));

        jLogo.setBackground(new java.awt.Color(249, 249, 249));
        jLogo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Boss/FirstBG.png"))); // NOI18N
        jLogo.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 440, 350));

        getContentPane().add(jLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 82, 660, 480));

        jTeam.setBackground(new java.awt.Color(249, 249, 249));
        jTeam.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });
        jTeam.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 2, 60, 50));

        jTextField15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField15.setForeground(new java.awt.Color(51, 51, 51));
        jTextField15.setText("Team");
        jTextField15.setBorder(null);
        jTextField15.setOpaque(false);
        jTextField15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField15FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField15FocusLost(evt);
            }
        });
        jTextField15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField15KeyPressed(evt);
            }
        });
        jTeam.add(jTextField15, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 4, 200, 48));

        jScrollPane5.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane5.setBorder(null);

        jTable5.setBackground(new java.awt.Color(249, 249, 249));
        jTable5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTable5.setForeground(new java.awt.Color(51, 51, 51));
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Team", "Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable5.setFocusable(false);
        jTable5.setGridColor(new java.awt.Color(255, 255, 255));
        jTable5.setRowHeight(30);
        jTable5.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable5.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable5.getTableHeader().setResizingAllowed(false);
        jTable5.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTable5);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(0).setResizable(false);
            jTable5.getColumnModel().getColumn(1).setResizable(false);
        }

        jTeam.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 280, 190));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/deleteB.png"))); // NOI18N
        jLabel27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel27MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel27MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel27MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel27MouseReleased(evt);
            }
        });
        jTeam.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, 131, 60));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/TeamBg.png"))); // NOI18N
        jTeam.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 60));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/addB.png"))); // NOI18N
        jLabel30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel30MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel30MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel30MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel30MouseReleased(evt);
            }
        });
        jTeam.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 131, 60));

        jLabel31.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel31.setText("No Results found !");
        jTeam.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 4, 170, 50));

        getContentPane().add(jTeam, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 82, 660, 480));

        jEmp.setBackground(new java.awt.Color(249, 249, 249));
        jEmp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });
        jEmp.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 2, 60, 50));

        jTextField6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(51, 51, 51));
        jTextField6.setText("National Id");
        jTextField6.setBorder(null);
        jTextField6.setOpaque(false);
        jTextField6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField6FocusLost(evt);
            }
        });
        jEmp.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 89, 170, 48));

        jTextField7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(51, 51, 51));
        jTextField7.setText("Name");
        jTextField7.setBorder(null);
        jTextField7.setOpaque(false);
        jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField7FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField7FocusLost(evt);
            }
        });
        jEmp.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 155, 170, 48));

        jTextField8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(51, 51, 51));
        jTextField8.setText("Family name");
        jTextField8.setBorder(null);
        jTextField8.setOpaque(false);
        jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField8FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField8FocusLost(evt);
            }
        });
        jEmp.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 221, 170, 48));

        jTextField9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(51, 51, 51));
        jTextField9.setText("Password");
        jTextField9.setBorder(null);
        jTextField9.setOpaque(false);
        jTextField9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField9FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField9FocusLost(evt);
            }
        });
        jEmp.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 287, 170, 48));

        jTextField10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(51, 51, 51));
        jTextField10.setText("Id,Name,Team ..");
        jTextField10.setBorder(null);
        jTextField10.setOpaque(false);
        jTextField10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField10FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField10FocusLost(evt);
            }
        });
        jEmp.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 4, 200, 48));

        jScrollPane1.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane1.setBorder(null);

        jTable1.setBackground(new java.awt.Color(249, 249, 249));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Team"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setRequestFocusEnabled(false);
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jEmp.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 85, 120, 253));

        jScrollPane3.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane3.setBorder(null);

        jTable3.setBackground(new java.awt.Color(249, 249, 249));
        jTable3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTable3.setForeground(new java.awt.Color(51, 51, 51));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Full Name", "Team", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable3.setFocusable(false);
        jTable3.setGridColor(new java.awt.Color(255, 255, 255));
        jTable3.setRowHeight(30);
        jTable3.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable3.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable3.getTableHeader().setResizingAllowed(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(0).setHeaderValue("Id");
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setHeaderValue("Full Name");
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setHeaderValue("Password");
        }

        jEmp.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 85, 320, 190));

        jLabel19.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(43, 56, 29));
        jLabel19.setText("X");
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel19MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel19MouseExited(evt);
            }
        });
        jEmp.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 335, -1, 30));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/deleteB.png"))); // NOI18N
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel20MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel20MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel20MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel20MouseReleased(evt);
            }
        });
        jEmp.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 131, 60));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/editB.png"))); // NOI18N
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel21MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel21MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel21MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel21MouseReleased(evt);
            }
        });
        jEmp.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 131, 60));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/empBg.png"))); // NOI18N
        jEmp.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 339));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/addB.png"))); // NOI18N
        jLabel23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel23MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel23MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel23MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel23MouseReleased(evt);
            }
        });
        jEmp.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 131, 60));

        jLabel24.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel24.setText("No Results found !");
        jEmp.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 4, 170, 50));

        getContentPane().add(jEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 82, 660, 480));

        jBoss.setBackground(new java.awt.Color(249, 249, 249));
        jBoss.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jBoss.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 2, 60, 50));

        jTextField1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(51, 51, 51));
        jTextField1.setText("National Id");
        jTextField1.setBorder(null);
        jTextField1.setOpaque(false);
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jBoss.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 89, 255, 48));

        jTextField2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(51, 51, 51));
        jTextField2.setText("Name");
        jTextField2.setBorder(null);
        jTextField2.setOpaque(false);
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2FocusLost(evt);
            }
        });
        jBoss.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 155, 255, 48));

        jTextField3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(51, 51, 51));
        jTextField3.setText("Family name");
        jTextField3.setBorder(null);
        jTextField3.setOpaque(false);
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });
        jBoss.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 221, 255, 48));

        jTextField4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(51, 51, 51));
        jTextField4.setText("Password");
        jTextField4.setBorder(null);
        jTextField4.setOpaque(false);
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField4FocusLost(evt);
            }
        });
        jBoss.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 287, 255, 48));

        jTextField5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(51, 51, 51));
        jTextField5.setText("Id,Name ..");
        jTextField5.setBorder(null);
        jTextField5.setOpaque(false);
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField5FocusLost(evt);
            }
        });
        jBoss.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 4, 200, 48));

        jScrollPane2.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane2.setBorder(null);

        jTable2.setBackground(new java.awt.Color(249, 249, 249));
        jTable2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTable2.setForeground(new java.awt.Color(51, 51, 51));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Full Name", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable2.setFocusable(false);
        jTable2.setGridColor(new java.awt.Color(255, 255, 255));
        jTable2.setRowHeight(30);
        jTable2.setSelectionBackground(new java.awt.Color(226, 226, 226));
        jTable2.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable2.getTableHeader().setResizingAllowed(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(0).setHeaderValue("Id");
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setHeaderValue("Full Name");
            jTable2.getColumnModel().getColumn(2).setResizable(false);
        }

        jBoss.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 85, 360, 190));

        jLabel17.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(43, 56, 29));
        jLabel17.setText("X");
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jBoss.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 335, -1, 30));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/deleteB.png"))); // NOI18N
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel14MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel14MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel14MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel14MouseReleased(evt);
            }
        });
        jBoss.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 131, 60));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/editB.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel15MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel15MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel15MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel15MouseReleased(evt);
            }
        });
        jBoss.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 131, 60));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/BossBG.png"))); // NOI18N
        jBoss.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 339));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/addB.png"))); // NOI18N
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel13MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel13MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel13MouseReleased(evt);
            }
        });
        jBoss.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 131, 60));

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setText("No Results found !");
        jBoss.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 4, 170, 50));

        getContentPane().add(jBoss, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 82, 660, 480));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin/adminBg.jpg"))); // NOI18N
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        showMenu();
    }//GEN-LAST:event_jLabel2MouseClicked
    public void showMenu() {
        c = new AnimationClass();
        c.jLabelXRight(-110, 0, 1, 2, jLabel5);
        c.jLabelXRight(-110, 15, 2, 1, jLabel6);
        c.jLabelXRight(-110, 17, 2, 1, jLabel7);
        c.jLabelXRight(-110, 21, 2, 1, jLabel8);
        c.jLabelXRight(-110, 40, 2, 1, jLabel10);
        c.jLabelXLeft(30, -110, 1, 2, jLabel2);
    }

    public void hideMenu() {
        c = new AnimationClass();
        c.jLabelXLeft(0, -110, 1, 2, jLabel5);
        c.jLabelXLeft(15, -110, 1, 1, jLabel6);
        c.jLabelXLeft(17, -110, 1, 1, jLabel7);
        c.jLabelXLeft(21, -110, 1, 1, jLabel8);
        c.jLabelXLeft(40, -110, 1, 1, jLabel10);
        c.jLabelXRight(-110, 30, 3, 2, jLabel2);
    }
    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        if(new File("user.txt").delete() ) System.out.println("user.txt Deleted :D ");
        else System.out.println("user.txt Not deleted ");
        if(new File("login.conf").delete() ) System.out.println("login.conf Deleted :D ");
        else System.out.println("login.txt Not deleted ");
        if(new File("admin.conf").delete() ) System.out.println("admin.conf Deleted :D ");
        else System.out.println("admin.txt Not deleted ");
        if(new File("boss.conf").delete() ) System.out.println("boss.conf Deleted :D ");
        else System.out.println("boss.conf Not deleted ");
        if(new File("sub.conf").delete() ) System.out.println("sub.conf Deleted :D ");
        else System.out.println("sub.conf Not deleted ");
        if(new File("report.pdf").delete() ) System.out.println("report.pdf Deleted :D ");
        else System.out.println("report.pdf Not deleted ");
        if(new File("printreq.pdf").delete() ) System.out.println("printreq.pdf Deleted :D ");
        else System.out.println("printreq.pdf Not deleted ");
        System.exit(0);
    }//GEN-LAST:event_jLabel4MouseClicked
    int x, y;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        BufferedReader reader = null;
        try {
            this.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 400, Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 300);
            reader = new BufferedReader(new FileReader("admin.conf"));
            String line;
            int l=0,w=Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 400,h=Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 300;
            while ((line = reader.readLine()) != null)
            {
                if(l == 0 ) {
                    w = parseInt(line);
                    l++;
                }
                else  h = parseInt(line);
            }   reader.close();
            this.setLocation(w, h);
            jBoss.setVisible(false);
            jEmp.setVisible(false);
            jTeam.setVisible(false);
            jLabel16.setVisible(false);
            jLabel17.setVisible(false);
            jLabel19.setVisible(false);
            jLabel24.setVisible(false);
            jLabel31.setVisible(false);
            showrecords();
            showrecordsB();
            showteams();
            showrecordsT();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                reader.close();
            } catch (IOException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_formWindowOpened

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        this.setLocation((int) evt.getXOnScreen() - x, (int) evt.getYOnScreen() - y);

    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        hideMenu();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("logoutBH.png")));
    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseExited
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("logoutB.png")));
    }//GEN-LAST:event_jLabel10MouseExited

    private void jLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseEntered
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("EMPBH.png")));
    }//GEN-LAST:event_jLabel8MouseEntered

    private void jLabel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseExited
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("EMPB.png")));
    }//GEN-LAST:event_jLabel8MouseExited

    private void jLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseEntered
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("TeamBH.png")));
    }//GEN-LAST:event_jLabel7MouseEntered

    private void jLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseExited
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("TeamB.png")));
    }//GEN-LAST:event_jLabel7MouseExited

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("BossBH.png")));
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseExited
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("BossB.png")));
    }//GEN-LAST:event_jLabel6MouseExited

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        FileWriter fw = null;
        try {
            if(new File("user.txt").delete() ) System.out.println("user.txt Deleted :D ");
            fw = new FileWriter("login.conf");
            PrintWriter pw =new PrintWriter(fw);
            pw.println(this.getLocationOnScreen().x);
            pw.print(this.getLocationOnScreen().y);
            pw.close();
            this.dispose();
            new login().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBH.png")));
    }//GEN-LAST:event_jLabel13MouseEntered

    private void jLabel13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseExited
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("addB.png")));
    }//GEN-LAST:event_jLabel13MouseExited

    private void jLabel13MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseReleased
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBH.png")));
    }//GEN-LAST:event_jLabel13MouseReleased

    private void jLabel13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MousePressed
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBP.png")));
    }//GEN-LAST:event_jLabel13MousePressed

    private void jLabel14MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseEntered
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBH.png")));
    }//GEN-LAST:event_jLabel14MouseEntered

    private void jLabel14MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseExited
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteB.png")));
    }//GEN-LAST:event_jLabel14MouseExited

    private void jLabel14MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MousePressed
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBP.png")));
    }//GEN-LAST:event_jLabel14MousePressed

    private void jLabel14MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseReleased
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBH.png")));
    }//GEN-LAST:event_jLabel14MouseReleased

    private void jLabel15MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseEntered
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("editBH.png")));
    }//GEN-LAST:event_jLabel15MouseEntered

    private void jLabel15MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseExited
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("editB.png")));
    }//GEN-LAST:event_jLabel15MouseExited

    private void jLabel15MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MousePressed
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("editBP.png")));
    }//GEN-LAST:event_jLabel15MousePressed

    private void jLabel15MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseReleased
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("editBH.png")));
    }//GEN-LAST:event_jLabel15MouseReleased

    private void jTextField5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusGained
        if (jTextField5.getText().equalsIgnoreCase("Id,Name ..")) {
            jTextField5.setText(null);
        }
        jLabel16.setVisible(false);
    }//GEN-LAST:event_jTextField5FocusGained

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        if (jTextField1.getText().equalsIgnoreCase("National Id")) {
            jTextField1.setText(null);
        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        if (jTextField2.getText().equalsIgnoreCase("Name")) {
            jTextField2.setText(null);
        }
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        if (jTextField3.getText().equalsIgnoreCase("Family name")) {
            jTextField3.setText(null);
        }    }//GEN-LAST:event_jTextField3FocusGained

    private void jTextField4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusGained
        if (jTextField4.getText().equalsIgnoreCase("Password")) {
            jTextField4.setText(null);
        }    }//GEN-LAST:event_jTextField4FocusGained

    private void jTextField5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusLost
        if (jTextField5.getText().isEmpty()) {
            jTextField5.setText("Id,Name ..");
        }
    }//GEN-LAST:event_jTextField5FocusLost

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        if (jTextField1.getText().isEmpty()) {
            jTextField1.setText("National Id");
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusLost
        if (jTextField2.getText().isEmpty()) {
            jTextField2.setText("Name");
        }
     }//GEN-LAST:event_jTextField2FocusLost

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
        if (jTextField3.getText().isEmpty()) {
            jTextField3.setText("Family name");
        }
    }//GEN-LAST:event_jTextField3FocusLost

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
        if (jTextField4.getText().isEmpty()) {
            jTextField4.setText("Password");
        }    }//GEN-LAST:event_jTextField4FocusLost

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        hideMenu();
        showrecordsB();
        jBoss.setVisible(true);
        jEmp.setVisible(false);
        jTeam.setVisible(false);
        jLogo.setVisible(false);
        edit = false;
        jTextField1.setText("National Id");
        jTextField2.setText("Name");
        jTextField3.setText("Family name");
        jTextField4.setText("Password");

    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        if (edit) {
            edit = false;
            updateBO();
            showrecordsB();
        } else {
            insertBO();
            showrecordsB();
        }
        jTextField1.setText("National Id");
        jTextField2.setText("Name");
        jTextField3.setText("Family name");
        jTextField4.setText("Password");
        jLabel17.setVisible(false);

    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        deleteBO(getSelectedrequest());
        showrecordsB();
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        editBO();
        edit = true;
        jLabel17.setVisible(true);

    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        showSearchedB();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        edit = false;
        jTextField1.setText("National Id");
        jTextField2.setText("Name");
        jTextField3.setText("Family name");
        jTextField4.setText("Password");
        jLabel17.setVisible(false);
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        showSearchedEMP();
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jTextField6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusGained
if(jTextField6.getText().equalsIgnoreCase("National Id")) jTextField6.setText(null);    }//GEN-LAST:event_jTextField6FocusGained

    private void jTextField6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusLost
        if (jTextField6.getText().isEmpty()) {
            jTextField6.setText("National Id");
        }
    }//GEN-LAST:event_jTextField6FocusLost

    private void jTextField7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusGained
if(jTextField7.getText().equalsIgnoreCase("Name")) jTextField7.setText(null);    }//GEN-LAST:event_jTextField7FocusGained

    private void jTextField7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusLost
        if (jTextField7.getText().isEmpty()) {
            jTextField7.setText("Name");
        }
    }//GEN-LAST:event_jTextField7FocusLost

    private void jTextField8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusGained
if(jTextField8.getText().equalsIgnoreCase("Family name")) jTextField8.setText(null);    }//GEN-LAST:event_jTextField8FocusGained

    private void jTextField8FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusLost
if(jTextField8.getText().isEmpty()) jTextField8.setText("Family name");    }//GEN-LAST:event_jTextField8FocusLost

    private void jTextField9FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField9FocusGained
if(jTextField9.getText().equalsIgnoreCase("Password")) jTextField9.setText(null);    }//GEN-LAST:event_jTextField9FocusGained

    private void jTextField9FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField9FocusLost
        if (jTextField9.getText().isEmpty()) {
            jTextField9.setText("Password");
        }
    }//GEN-LAST:event_jTextField9FocusLost

    private void jTextField10FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField10FocusGained
        if (jTextField10.getText().equalsIgnoreCase("Id,Name,Team ..")) {
            jTextField10.setText(null);
        }
        jLabel24.setVisible(false);

    }//GEN-LAST:event_jTextField10FocusGained

    private void jTextField10FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField10FocusLost
        if (jTextField10.getText().isEmpty()) {
            jTextField10.setText("Id,Name,Team ..");
        }
            }//GEN-LAST:event_jTextField10FocusLost

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        edit2 = false;
        jTextField6.setText("National Id");
        jTextField7.setText("Name");
        jTextField8.setText("Family name");
        jTextField9.setText("Password");
        jLabel19.setVisible(false);
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        deleteRE(getSelectedrequest1(), getTeam());
        showrecords();
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel20MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseEntered
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBH.png")));
    }//GEN-LAST:event_jLabel20MouseEntered

    private void jLabel20MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseExited
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteB.png")));
    }//GEN-LAST:event_jLabel20MouseExited

    private void jLabel20MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MousePressed
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBP.png")));
    }//GEN-LAST:event_jLabel20MousePressed

    private void jLabel20MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseReleased
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBH.png")));
    }//GEN-LAST:event_jLabel20MouseReleased

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        editEM();
        edit2 = true;
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel21MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseEntered
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("editBH.png")));
    }//GEN-LAST:event_jLabel21MouseEntered

    private void jLabel21MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseExited
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("editB.png")));
    }//GEN-LAST:event_jLabel21MouseExited

    private void jLabel21MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MousePressed
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("editBP.png")));
    }//GEN-LAST:event_jLabel21MousePressed

    private void jLabel21MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseReleased
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("editBH.png")));
    }//GEN-LAST:event_jLabel21MouseReleased

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        if (edit2) {
            updateEM();
            edit2 = false;
        } else {
            insertRE();
        }
        showrecords();
        jTextField6.setText("National Id");
        jTextField7.setText("Name");
        jTextField8.setText("Family name");
        jTextField9.setText("Password");
        jLabel19.setVisible(false);
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel23MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseEntered
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBH.png")));
    }//GEN-LAST:event_jLabel23MouseEntered

    private void jLabel23MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseExited
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("addB.png")));
    }//GEN-LAST:event_jLabel23MouseExited

    private void jLabel23MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MousePressed
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBP.png")));
    }//GEN-LAST:event_jLabel23MousePressed

    private void jLabel23MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseReleased
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBH.png")));
    }//GEN-LAST:event_jLabel23MouseReleased

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        showrecords();
        showteams();
        hideMenu();
        jBoss.setVisible(false);
        jEmp.setVisible(true);
        jTeam.setVisible(false);
        jLogo.setVisible(false);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        showSearchedT();
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jTextField15FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField15FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15FocusGained

    private void jTextField15FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField15FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15FocusLost

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        deleteT(getSelectedrequest2());
        showrecordsT();
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jLabel27MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseEntered
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBH.png")));
    }//GEN-LAST:event_jLabel27MouseEntered

    private void jLabel27MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseExited
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteB.png")));
    }//GEN-LAST:event_jLabel27MouseExited

    private void jLabel27MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MousePressed
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBP.png")));
    }//GEN-LAST:event_jLabel27MousePressed

    private void jLabel27MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseReleased
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("deleteBH.png")));
    }//GEN-LAST:event_jLabel27MouseReleased

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked

        insertT();
        showrecordsT();
    }//GEN-LAST:event_jLabel30MouseClicked

    private void jLabel30MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseEntered
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBH.png")));
    }//GEN-LAST:event_jLabel30MouseEntered

    private void jLabel30MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseExited
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("addB.png")));
    }//GEN-LAST:event_jLabel30MouseExited

    private void jLabel30MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MousePressed
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBP.png")));
    }//GEN-LAST:event_jLabel30MousePressed

    private void jLabel30MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseReleased
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("addBH.png")));
    }//GEN-LAST:event_jLabel30MouseReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        jBoss.setVisible(false);
        jEmp.setVisible(false);
        jTeam.setVisible(true);
        jLogo.setVisible(false);
        showrecordsT();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jTextField15KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField15KeyPressed
        jLabel31.setVisible(false);
    }//GEN-LAST:event_jTextField15KeyPressed

    private void jLabel19MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseEntered
        jLabel19.setForeground(new java.awt.Color(43, 56, 40));
    }//GEN-LAST:event_jLabel19MouseEntered

    private void jLabel19MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseExited
        jLabel19.setForeground(new java.awt.Color(43, 56, 29));
    }//GEN-LAST:event_jLabel19MouseExited

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing
    public void showrecordsB() {
        model = (DefaultTableModel) jTable2.getModel();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql = "Select * from user where position = 'boss' ";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("ID_user"), rs.getString("name") + " " + rs.getString("lastname"), rs.getString("password")});
            }
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    public void insertBO() {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "insert into user (ID_USER,password,name,lastname,position,nid) values(" + getlastid() + ",'" + jTextField4.getText() + "','" + jTextField2.getText() + "','" + jTextField3.getText() + "','boss','" + jTextField1.getText() + "')";
            st.executeUpdate(sql);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showrecords() {
        model = (DefaultTableModel) jTable3.getModel();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql = "Select * from user where position = 'subordinate' ";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("ID_user"), rs.getString("name") + " " + rs.getString("lastname"), "Team " + rs.getString("IDTEAM"), rs.getString("password")});
            }
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    public void showteams() {
        model = (DefaultTableModel) jTable1.getModel();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql = "Select * from team";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{"Team " + rs.getString("IDTEAM")});
            }
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    public int getlastid() throws ClassNotFoundException {
        int id = 1;
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "Select * from user";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                id = rs.getInt("id_user");
            }
            id++;
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
        return id;
    }

    public void deleteBO(int i) {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "delete from user where ID_user =" + i;
            st.execute(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private int getSelectedrequest() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        return parseInt((String) jTable2.getValueAt(jTable2.getSelectedRow(), 0));
    }

    private int getSelectedrequest1() {
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        return parseInt((String) jTable3.getValueAt(jTable3.getSelectedRow(), 0));
    }

    private int getSelectedTeam() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        return parseInt((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString().substring(5, 6));
    }
    boolean edit = false;

    public void editBO() {

        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "Select * from user where id_user = '" + getSelectedrequest() + "' ";
            ResultSet rs = st.executeQuery(sql);
            rs.next();
            jTextField1.setText(rs.getString("nid"));
            jTextField4.setText(rs.getString("password"));
            jTextField2.setText(rs.getString("name"));
            jTextField3.setText(rs.getString("lastname"));
            edit = true;
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void updateBO() {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "update user set nid='" + jTextField1.getText() + "',password='" + jTextField4.getText() + "',name='" + jTextField2.getText() + "',lastname='" + jTextField3.getText() + "' where id_user=" + getSelectedrequest();
            st.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static boolean isNumeric(String str) {
        try {
            double d = Double.parseDouble(str);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }

    public void showSearchedB() {
        try {
            int results = 0;
            model = (DefaultTableModel) jTable2.getModel();
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql;
            ResultSet rs;
            if (isNumeric(jTextField5.getText())) {
                sql = "select * from user where id_user=" + parseInt(jTextField5.getText()) + " and position ='boss'";
                rs = st.executeQuery(sql);
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getString("ID_user"), rs.getString("name") + " " + rs.getString("lastname"), rs.getString("password")});
                    results++;
                }
            }
            sql = "select * from user where (name='" + jTextField5.getText() + "' or lastname='" + jTextField5.getText() + "' or nid='" + jTextField5.getText() + "') and position ='boss'";
            rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("ID_user"), rs.getString("name") + " " + rs.getString("lastname"), rs.getString("password")});
                results++;
            }
            if (results == 0) {
                jLabel16.setVisible(true);
            } else {
                jLabel16.setVisible(false);
            }
            if (jTextField5.getText().isEmpty()) {
                showrecordsB();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void insertRE() {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            int iduser = getlastid();
            int idteam = getSelectedTeam();
            String sql = "insert into user (ID_USER,IDTEAM,nid,name,lastname,position,password) values(" + iduser + "," + idteam + ",'" + jTextField6.getText() + "','" + jTextField7.getText() + "','" + jTextField8.getText() + "','subordinate','" + jTextField9.getText() + "')";
            st.executeUpdate(sql);
            sql = "select number from team where idteam = " + idteam;
            ResultSet r = st.executeQuery(sql);
            r.next();
            int idteams = r.getInt("Number") + 1;
            sql = "update team set number=" + idteams + " where idteam = " + idteam;
            st.executeUpdate(sql);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public int getTeam() {
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        return parseInt((String) jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString().substring(5, 6));
    }

    public void deleteRE(int i, int j) {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            System.out.println(" ----- ");
            String sql = "delete from user where ID_user =" + i;
            st.execute(sql);

            sql = "select number from team where idteam = " + j;
            ResultSet r = st.executeQuery(sql);
            r.next();
            int idteams = r.getInt("Number") - 1;
            sql = "update team set number=" + idteams + " where idteam = " + j;
            st.execute(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void editEM() {

        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "Select * from user where id_user = '" + getSelectedrequest1() + "' ";
            ResultSet rs = st.executeQuery(sql);
            rs.next();
            jTextField6.setText(rs.getString("nid"));
            jTextField9.setText(rs.getString("password"));
            jTextField7.setText(rs.getString("name"));
            jTextField8.setText(rs.getString("lastname"));
            jLabel19.setVisible(true);
            edit2 = true;
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    boolean edit2 = false;

    public void updateEM() {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();

            String sql = "SELECT * from user where id_user = " + getSelectedrequest1();
            ResultSet r = st.executeQuery(sql);
            r.next();
            int TeamUserid = r.getInt("idteam");
            int teamSelectedid = getSelectedTeam();
            if (teamSelectedid != TeamUserid) {
                sql = "select * from team where idteam =" + TeamUserid;
                r = st.executeQuery(sql);
                int number;
                if (r.next()) {
                    number = r.getInt("number") - 1;
                    sql = "update team set number =" + number + " where idteam =" + TeamUserid;
                    st.executeUpdate(sql);
                }
                sql = "select * from team where idteam =" + teamSelectedid;
                r = st.executeQuery(sql);
                r.next();
                sql = "select number from team where idteam = " + teamSelectedid;
                r = st.executeQuery(sql);
                r.next();
                int num = r.getInt("Number") + 1;
                sql = "update team set number=" + num + " where idteam = " + teamSelectedid;
                st.executeUpdate(sql);
            }
            sql = "update user set idteam=" + teamSelectedid + ", nId = '" + jTextField6.getText() + "',password='" + jTextField9.getText() + "',name='" + jTextField7.getText() + "',lastname='" + jTextField8.getText() + "' where id_user=" + getSelectedrequest1();
            st.executeUpdate(sql);

        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showSearchedEMP() {
        try {
            int results = 0;
            model = (DefaultTableModel) jTable3.getModel();
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql;
            ResultSet rs;
            if (isNumeric(jTextField10.getText())) {
                sql = "select * from user where id_user=" + parseInt(jTextField10.getText()) + " and position ='subordinate'";
                rs = st.executeQuery(sql);
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getString("ID_user"), rs.getString("name") + " " + rs.getString("lastname"), "Team " + rs.getString("IDTEAM"), rs.getString("password")});
                    results++;
                }
            }
            sql = "select * from user where (name='" + jTextField10.getText() + "' or lastname='" + jTextField10.getText() + "' or nid='" + jTextField10.getText() + "') and position ='subordinate'";
            rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("ID_user"), rs.getString("name") + " " + rs.getString("lastname"), "Team " + rs.getString("IDTEAM"), rs.getString("password")});
                results++;
            }
            if (jTextField10.getText().matches("(.*)team(.*)") || jTextField10.getText().matches("(.*)TEAM(.*)") || jTextField10.getText().matches("(.*)Team(.*)")) {
                sql = "select * from user where idteam=" + parseInt(String.valueOf(jTextField10.getText().charAt(jTextField10.getText().length() - 1)));
                rs = st.executeQuery(sql);
                System.out.println(" f ");
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getString("ID_user"), rs.getString("name") + " " + rs.getString("lastname"), "Team " + rs.getString("IDTEAM"), rs.getString("password")});
                    results++;
                }
            }
            if (results == 0) {
                jLabel24.setVisible(true);
                showrecords();
            } else {
                jLabel24.setVisible(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public int getlasteam() {
        int id = 0;
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "Select * from team";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                id = rs.getInt("idteam");
            }
            id++;
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
        return id;
    }

    public void insertT() {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "insert into team (idteam,number) values(" + getlasteam() + "," + 0 + ")";
            st.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showrecordsT() {
        model = (DefaultTableModel) jTable5.getModel();
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql = "Select * from team";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                if (rs.getInt("number") <= 1) {
                    sql = "member";
                } else {
                    sql = "members";
                }
                model.addRow(new Object[]{"Team " + rs.getString("idTeam"), rs.getString("Number") + " " + sql});
            }
        } catch (SQLException ez) {
            JOptionPane.showMessageDialog(this, ez.getMessage());
        }
    }

    public void deleteT(int i) {
        try {
            connect = new Connection();
            Statement st = connect.con.createStatement();
            String sql = "UPDATE user set idteam = " + null + " where  IDteam =" + i;
            st.execute(sql);
            sql = "delete from team where IDteam =" + i;
            st.execute(sql);

        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private int getSelectedrequest2() {
        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
        return parseInt((String) jTable5.getValueAt(jTable5.getSelectedRow(), 0).toString().substring(5, 6));
    }

    public void showSearchedT() {
        try {
            int results = 0;
            model = (DefaultTableModel) jTable5.getModel();
            connect = new Connection();
            Statement st = connect.con.createStatement();
            model.getDataVector().removeAllElements();
            revalidate();
            String sql;
            if (!isNumeric(jTextField15.getText())) {
                sql = "Select * from team where idteam =" + parseInt(String.valueOf(jTextField15.getText().charAt(jTextField15.getText().length() - 1)));
            } else {
                sql = "Select * from team where idteam =" + parseInt(jTextField15.getText());
            }
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{"Team " + rs.getString("idteam"), rs.getString("number")});
                results++;
            }
            if (results == 0) {
                showrecordsT();
                jLabel31.setVisible(true);
            } else {
                jLabel31.setVisible(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Admin().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jBoss;
    private javax.swing.JPanel jEmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jLogo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable5;
    private javax.swing.JPanel jTeam;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
    AnimationClass c;
    public DefaultTableModel model;
    Connection connect;
}
